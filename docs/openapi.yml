openapi: 3.0.0

info:
  title: Expenseably API
  description: Expenseably API. Manage your expenses without tears or fears.
  version: 1.0.0

servers:
  - url: http://localhost:5000/api/v1
    description: Dev API

  - url: https://extenseably-api.onrender.com/api/v1
    description: Prod API

paths:
  /auth:
    post:
      tags: ["auth"]
      summary: Login and returns the session cookie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/login"
      security: []
      responses:
        201:
          description: User authenticate successfully
          headers:
            Set-Cookie:
              schema:
                type: string
                example: connect.sid=abcde12345; Path=/; HttpOnly
        401:
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unathorized"
    get:
      tags: ["auth"]
      summary: Check if user is authenticated
      security: []
      responses:
        200:
          description: User can or not be logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/is-authenticated"
    delete:
      tags: ["auth"]
      summary: Logout
      security: []
      responses:
        "204":
          description: Destroyes user session

  /user:
    get:
      tags: ["user"]
      summary: "Retrieves the user that are logged in"
      responses:
        200:
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/user"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not-found"

components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: connect.sid
  schemas:
    unathorized:
      type: object
      properties:
        statusCode:
          type: number
          example: 401
        error:
          type: string
          example: Unauthorized
        message:
          type: string
          example: Unauthorized

    not-found:
      type: object
      properties:
        statusCode:
          type: number
          example: 404
        error:
          type: string
          example: Not found
        message:
          type: string
          example: Not found

    login:
      type: object
      properties:
        username:
          type: string
          description: User email
          example: walter_white@gmail.com
        password:
          type: string
          description: User password
          example: HelloWorld@123

    is-authenticated:
      type: object
      properties:
        authenticated:
          type: boolean
          description: If true, then user is logged in
          example: true

    user:
      type: object
      properties:
        id:
          type: string
          example: 624bb08a91728a0b74b23cc3
        name:
          type: string
          example: Walter White
        email:
          type: string
          example: walter_white@gmail.com
        createdAt:
          type: string
          example: 2020-03-10T23:44:56.289Z

security:
  - sessionAuth: []
